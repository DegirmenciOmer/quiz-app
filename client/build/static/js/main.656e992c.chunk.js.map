{"version":3,"sources":["questions.js","App.js","reportWebVitals.js","index.js"],"names":["questions","questionText","answerOptions","answerText","isCorrect","App","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","setIsCorrect","isAnswered","setIsAnswered","score","setScore","console","log","className","length","map","answerOption","disabled","onClick","option","style","width","marginTop","marginLeft","nextQuestion","handleNavigation","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.656e992c.chunk.js","sourcesContent":["export const questions = [\r\n  {\r\n    questionText:\r\n      'Anna is good at asking questions. So, she goes back to hosting and reporting.',\r\n    answerOptions: [\r\n      { answerText: 'false', isCorrect: false },\r\n      { answerText: 'true', isCorrect: true },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Anna will be a team leader',\r\n    answerOptions: [\r\n      { answerText: 'false', isCorrect: true },\r\n      { answerText: 'true', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: '....... people are happy people.',\r\n    answerOptions: [\r\n      { answerText: 'angry', isCorrect: false },\r\n      { answerText: 'cheerful', isCorrect: true },\r\n      { answerText: 'old', isCorrect: false },\r\n      { answerText: 'tired', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: \"Pete is Anna's ________ \",\r\n    answerOptions: [\r\n      { answerText: 'husband', isCorrect: false },\r\n      { answerText: 'boyfriend', isCorrect: false },\r\n      { answerText: 'boss', isCorrect: false },\r\n      { answerText: 'new partner', isCorrect: true },\r\n    ],\r\n  },\r\n  {\r\n    questionText:\r\n      'to get information about something because you want to know more about it, or to learn a fact or piece of information for the first time ',\r\n    answerOptions: [\r\n      { answerText: 'come in', isCorrect: false },\r\n      { answerText: 'throw away', isCorrect: false },\r\n      { answerText: 'find out', isCorrect: true },\r\n      { answerText: 'blow up', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'complete or full or not lacking or leaving out any part',\r\n    answerOptions: [\r\n      { answerText: 'entire', isCorrect: true },\r\n      { answerText: 'grumpy', isCorrect: false },\r\n      { answerText: 'criminal', isCorrect: false },\r\n      { answerText: 'lock', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'to dismiss (someone) from a job ',\r\n    answerOptions: [\r\n      { answerText: 'budget', isCorrect: false },\r\n      { answerText: 'reset', isCorrect: false },\r\n      { answerText: 'scare', isCorrect: false },\r\n      { answerText: 'fire', isCorrect: true },\r\n    ],\r\n  },\r\n  {\r\n    questionText:\r\n      'a person who enjoys or is particularly good at interacting with others',\r\n    answerOptions: [\r\n      { answerText: 'people person', isCorrect: true },\r\n      { answerText: 'grumpy', isCorrect: false },\r\n      { answerText: 'simple', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Who is the boss?',\r\n    answerOptions: [\r\n      { answerText: 'Pete', isCorrect: false },\r\n      { answerText: 'Anna', isCorrect: false },\r\n      { answerText: 'Ms. Weaver', isCorrect: true },\r\n    ],\r\n  },\r\n]\r\n","import React, { useState } from 'react'\r\nimport { questions } from './questions'\r\n\r\nexport default function App() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0)\r\n  const [showScore, setShowScore] = useState(false)\r\n  const [isCorrect, setIsCorrect] = useState(false)\r\n  const [isAnswered, setIsAnswered] = useState(false)\r\n\r\n  const [score, setScore] = useState(0)\r\n\r\n  const onAnswerClick = (option) => {\r\n    setIsAnswered(true)\r\n    if (option.isCorrect) {\r\n      setIsCorrect(true)\r\n      setScore(score + 1)\r\n    }\r\n  }\r\n\r\n  const handleNavigation = () => {\r\n    setIsAnswered(false)\r\n    setIsCorrect(false)\r\n    const nextQuestion = currentQuestion + 1\r\n    if (nextQuestion < questions.length) {\r\n      setCurrentQuestion(nextQuestion)\r\n    } else {\r\n      setShowScore(true)\r\n    }\r\n  }\r\n  console.log({ isAnswered })\r\n  console.log({ isCorrect })\r\n  return (\r\n    <div\r\n      className={`${\r\n        isAnswered && isCorrect\r\n          ? 'success'\r\n          : isAnswered && !isCorrect\r\n          ? 'fail'\r\n          : ''\r\n      }  app`}\r\n    >\r\n      {showScore ? (\r\n        <div className='score-section'>\r\n          You scored {score} out of {questions.length}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className='question-section'>\r\n            <div className='question-count'>\r\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n            </div>\r\n            <div className='question-text'>\r\n              {questions[currentQuestion].questionText}\r\n            </div>\r\n          </div>\r\n          <div className='answer-section'>\r\n            {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n              <button\r\n                disabled={isAnswered}\r\n                className={`${\r\n                  isAnswered && answerOption.isCorrect && 'correct'\r\n                } ${isAnswered && !answerOption.isCorrect && 'incorrect'}`}\r\n                key={answerOption.answerText}\r\n                onClick={() => onAnswerClick(answerOption)}\r\n              >\r\n                {answerOption.answerText}\r\n              </button>\r\n            ))}\r\n            {isAnswered && (\r\n              <button\r\n                style={{ width: '30%', marginTop: '15px', marginLeft: 'auto' }}\r\n                onClick={() => handleNavigation()}\r\n              >\r\n                Next\r\n              </button>\r\n            )}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}