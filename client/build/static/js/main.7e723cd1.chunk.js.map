{"version":3,"sources":["questions.js","components/MultipleOptions.js","App.js","reportWebVitals.js","index.js"],"names":["questions","questionText","answerOptions","answerText","isCorrect","MultipleOptions","isAnswered","setIsAnswered","setIsCorrect","currentQuestion","setCurrentQuestion","setScore","score","console","log","className","map","answerOption","disabled","onClick","option","style","width","marginTop","marginLeft","App","useState","intro","setIntro","length","color","margin","target","href","backgroundColor","padding","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e723cd1.chunk.js","sourcesContent":["export const questions = [\r\n  {\r\n    questionText:\r\n      'Anna is good at asking questions. So, she goes back to hosting and reporting.',\r\n    answerOptions: [\r\n      { answerText: 'false', isCorrect: false },\r\n      { answerText: 'true', isCorrect: true },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Anna will be a team leader',\r\n    answerOptions: [\r\n      { answerText: 'false', isCorrect: true },\r\n      { answerText: 'true', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: '....... people are happy people.',\r\n    answerOptions: [\r\n      { answerText: 'angry', isCorrect: false },\r\n      { answerText: 'cheerful', isCorrect: true },\r\n      { answerText: 'old', isCorrect: false },\r\n      { answerText: 'tired', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: \"Pete is Anna's ________ \",\r\n    answerOptions: [\r\n      { answerText: 'husband', isCorrect: false },\r\n      { answerText: 'boyfriend', isCorrect: false },\r\n      { answerText: 'boss', isCorrect: false },\r\n      { answerText: 'new partner', isCorrect: true },\r\n    ],\r\n  },\r\n  {\r\n    questionText:\r\n      'to get information about something because you want to know more about it, or to learn a fact or piece of information for the first time ',\r\n    answerOptions: [\r\n      { answerText: 'come in', isCorrect: false },\r\n      { answerText: 'throw away', isCorrect: false },\r\n      { answerText: 'find out', isCorrect: true },\r\n      { answerText: 'blow up', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'complete or full or not lacking or leaving out any part',\r\n    answerOptions: [\r\n      { answerText: 'entire', isCorrect: true },\r\n      { answerText: 'grumpy', isCorrect: false },\r\n      { answerText: 'criminal', isCorrect: false },\r\n      { answerText: 'lock', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'to dismiss (someone) from a job ',\r\n    answerOptions: [\r\n      { answerText: 'budget', isCorrect: false },\r\n      { answerText: 'reset', isCorrect: false },\r\n      { answerText: 'scare', isCorrect: false },\r\n      { answerText: 'fire', isCorrect: true },\r\n    ],\r\n  },\r\n  {\r\n    questionText:\r\n      'a person who enjoys or is particularly good at interacting with others',\r\n    answerOptions: [\r\n      { answerText: 'people person', isCorrect: true },\r\n      { answerText: 'grumpy', isCorrect: false },\r\n      { answerText: 'simple', isCorrect: false },\r\n    ],\r\n  },\r\n  {\r\n    questionText: 'Who is the boss?',\r\n    answerOptions: [\r\n      { answerText: 'Pete', isCorrect: false },\r\n      { answerText: 'Anna', isCorrect: false },\r\n      { answerText: 'Ms. Weaver', isCorrect: true },\r\n    ],\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { questions } from './../questions'\r\n\r\nconst MultipleOptions = ({\r\n  isAnswered,\r\n  setIsAnswered,\r\n  setIsCorrect,\r\n  currentQuestion,\r\n  setCurrentQuestion,\r\n  setScore,\r\n  score,\r\n}) => {\r\n  const handleNavigation = () => {\r\n    setIsAnswered(false)\r\n    setIsCorrect(false)\r\n\r\n    setCurrentQuestion(currentQuestion + 1)\r\n  }\r\n\r\n  const onAnswerClick = (option) => {\r\n    setIsAnswered(true)\r\n    if (option.isCorrect) {\r\n      setIsCorrect(true)\r\n      setScore(score + 1)\r\n    }\r\n  }\r\n  console.log({ score })\r\n  return (\r\n    <div className='answer-section'>\r\n      {questions[currentQuestion].answerOptions.map((answerOption) => (\r\n        <button\r\n          disabled={isAnswered}\r\n          className={`${isAnswered && answerOption.isCorrect && 'correct'} ${\r\n            isAnswered && !answerOption.isCorrect && 'incorrect'\r\n          }`}\r\n          key={answerOption.answerText}\r\n          onClick={() => onAnswerClick(answerOption)}\r\n        >\r\n          {answerOption.answerText}\r\n        </button>\r\n      ))}\r\n      {isAnswered && (\r\n        <button\r\n          style={{ width: '30%', marginTop: '15px', marginLeft: 'auto' }}\r\n          onClick={() => handleNavigation()}\r\n        >\r\n          Next\r\n        </button>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MultipleOptions\r\n","import React, { useState } from 'react'\r\nimport MultipleOptions from './components/MultipleOptions'\r\nimport { questions } from './questions'\r\n\r\nexport default function App() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0)\r\n  const [isCorrect, setIsCorrect] = useState(false)\r\n  const [isAnswered, setIsAnswered] = useState(false)\r\n  const [score, setScore] = useState(0)\r\n  const [intro, setIntro] = useState(true)\r\n\r\n  console.log({ isAnswered })\r\n  console.log({ isCorrect })\r\n  console.log({ currentQuestion })\r\n  console.log(questions.length)\r\n  return (\r\n    <div\r\n      className={`${\r\n        isAnswered && isCorrect\r\n          ? 'success'\r\n          : isAnswered && !isCorrect\r\n          ? 'fail'\r\n          : ''\r\n      }  app`}\r\n    >\r\n      {intro ? (\r\n        <div>\r\n          <h4>\r\n            First study\r\n            <a\r\n              style={{ color: '#7cc6fe', margin: '0 3px ' }}\r\n              target='_blank'\r\n              href='https://learningenglish.voanews.com/a/lets-learn-english-level-2-lesson-2/3960471.html'\r\n            >\r\n              this lesson\r\n            </a>\r\n            and then start the test.\r\n          </h4>\r\n          <button\r\n            style={{\r\n              margin: 'auto',\r\n              backgroundColor: 'green',\r\n              padding: '12px',\r\n            }}\r\n            onClick={() => setIntro(false)}\r\n          >\r\n            Start!\r\n          </button>\r\n        </div>\r\n      ) : currentQuestion > questions.length - 1 ? (\r\n        <div className='score-section'>\r\n          You scored {score} out of {questions.length}\r\n        </div>\r\n      ) : (\r\n        <>\r\n          <div className='question-section'>\r\n            <div className='question-count'>\r\n              <span>Question {currentQuestion + 1}</span>/{questions.length}\r\n            </div>\r\n            <div className='question-text'>\r\n              {questions[currentQuestion].questionText}\r\n            </div>\r\n          </div>\r\n          <MultipleOptions\r\n            isAnswered={isAnswered}\r\n            setIsAnswered={setIsAnswered}\r\n            isCorrect={isCorrect}\r\n            setIsCorrect={setIsCorrect}\r\n            currentQuestion={currentQuestion}\r\n            setCurrentQuestion={setCurrentQuestion}\r\n            setScore={setScore}\r\n            score={score}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}